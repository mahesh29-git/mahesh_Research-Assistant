# -*- coding: utf-8 -*-
"""Data Cleaning  Script.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fsa412vfNpuOR-O89cpTh9_cn5zBaN5K
"""

#>>>>>> DATA CLEANING >>>>>>
# Clean column names by stripping whitespace
df.columns = df.columns.str.strip()

# Standardizing categorical values (unifying COVID-19 naming)
df['TopicArea'] = df['TopicArea'].str.strip().str.replace('_', '-').str.lower().str.title()

# Convert date columns to proper datetime format
df['DatePublished'] = pd.to_datetime(df['DatePublished'], errors='coerce')
df['LastUpdateDate'] = pd.to_datetime(df['LastUpdateDate'], errors='coerce')

# Convert numerical columns (Instances) to integers where applicable
df['Instances'] = df['Instances'].astype(str).str.replace('K', '000').str.replace('M', '000000')
df['Instances'] = pd.to_numeric(df['Instances'], errors='coerce')

# Remove leading/trailing whitespaces from string columns
df = df.applymap(lambda x: x.strip() if isinstance(x, str) else x)
# Clean column names by stripping whitespace
df.columns = df.columns.str.strip()

# Standardizing categorical values (unifying COVID-19 naming)
df['TopicArea'] = df['TopicArea'].str.strip().str.replace('_', '-').str.lower().str.title()

# Convert date columns to proper datetime format
df['DatePublished'] = pd.to_datetime(df['DatePublished'], errors='coerce')
df['LastUpdateDate'] = pd.to_datetime(df['LastUpdateDate'], errors='coerce')

# Convert numerical columns (Instances) to integers where applicable
df['Instances'] = df['Instances'].astype(str).str.replace('K', '000').str.replace('M', '000000')
df['Instances'] = pd.to_numeric(df['Instances'], errors='coerce')

# Remove leading/trailing whitespaces from string columns
df = df.applymap(lambda x: x.strip() if isinstance(x, str) else x)

df.to_csv("Indiana_cleaned_data.csv", index=False)  # Save as an Excel file
from google.colab import files
files.download("Indiana_cleaned_data.csv")  # Download the file


print(df.head()) # This prints the first 5 rows of the dataframe
print(df.tail()) # This prints the last 5 rows of the dataframe